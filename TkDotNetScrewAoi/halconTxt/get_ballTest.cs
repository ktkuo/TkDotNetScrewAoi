//
//  File generated by HDevelop for HALCON/DOTNET (C#) Version 11.0
//

using HalconDotNet;

public partial class HDevelopExport
{
#if !NO_EXPORT_APP_MAIN
  public HDevelopExport()
  {
    // Default settings used in HDevelop 
    HOperatorSet.SetSystem("width", 512);
    HOperatorSet.SetSystem("height", 512);
    action();
  }
#endif

  // Main procedure 
  private void action()
  {

    // Local iconic variables 

    HObject ho_imageRaw, ho_edgeAmplitude1, ho_imageEmphasize;
    HObject ho_imageMean, ho_region, ho_regionClosing1, ho_connectedRegions;
    HObject ho_selectedRegions, ho_rectangle1, ho_imageReduced;
    HObject ho_imagePart;


    // Local control variables 

    HTuple hv_size = null, hv_area = null, hv_row = null;
    HTuple hv_column = null, hv_width = null, hv_height = null;

    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_imageRaw);
    HOperatorSet.GenEmptyObj(out ho_edgeAmplitude1);
    HOperatorSet.GenEmptyObj(out ho_imageEmphasize);
    HOperatorSet.GenEmptyObj(out ho_imageMean);
    HOperatorSet.GenEmptyObj(out ho_region);
    HOperatorSet.GenEmptyObj(out ho_regionClosing1);
    HOperatorSet.GenEmptyObj(out ho_connectedRegions);
    HOperatorSet.GenEmptyObj(out ho_selectedRegions);
    HOperatorSet.GenEmptyObj(out ho_rectangle1);
    HOperatorSet.GenEmptyObj(out ho_imageReduced);
    HOperatorSet.GenEmptyObj(out ho_imagePart);

    //*20220716 星宏 冠廷 輸出版本
    hv_size = 500;
    //*讀圖
    ho_imageRaw.Dispose();
    HOperatorSet.ReadImage(out ho_imageRaw, "D:/02當前程式/01TkAoiScrew/TkDotNetScrewAoi/TkDotNetScrewAoi/imagesTunes/2022-07-20/1.bmp");

    //*取導數  可找邊緣
    //*http://www.ihalcon.com/read-2139.html
    ho_edgeAmplitude1.Dispose();
    HOperatorSet.SobelAmp(ho_imageRaw, out ho_edgeAmplitude1, "sum_abs", 9);

    //*gray_range_rect (imageRaw, ImageResult, 11, 11)

    //*強化  單點像素 與 全圖像素之平均 加大 黑更黑 白更白
    //*res := round((orig - mean) * Factor) + orig
    ho_imageEmphasize.Dispose();
    HOperatorSet.Emphasize(ho_edgeAmplitude1, out ho_imageEmphasize, 12, 12, 4);

    //*通常強化後，需要去躁點
    ho_imageMean.Dispose();
    HOperatorSet.MeanImage(ho_edgeAmplitude1, out ho_imageMean, 4, 4);
    //*二質化
    ho_region.Dispose();
    HOperatorSet.Threshold(ho_imageMean, out ho_region, 12, 44);

    //*閉合  先膨脹再侵蝕 =>盡量完善圓周
    ho_regionClosing1.Dispose();
    HOperatorSet.ClosingCircle(ho_region, out ho_regionClosing1, 100);

    //*region 切開
    ho_connectedRegions.Dispose();
    HOperatorSet.Connection(ho_regionClosing1, out ho_connectedRegions);

    //*找尋球面積(上下限)
    ho_selectedRegions.Dispose();
    HOperatorSet.SelectShape(ho_connectedRegions, out ho_selectedRegions, "area", 
        "and", 10000, 999999);

    //*找出區域的中心座標與面積
    HOperatorSet.AreaCenter(ho_selectedRegions, out hv_area, out hv_row, out hv_column);

    //*圈出矩形
    ho_rectangle1.Dispose();
    HOperatorSet.GenRectangle1(out ho_rectangle1, hv_row-(hv_size*0.5), hv_column-(hv_size*0.5), 
        hv_row+(hv_size*0.5), hv_column+(hv_size*0.5));

    //*與原圖取交集
    ho_imageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_imageRaw, ho_rectangle1, out ho_imageReduced);

    //*輸出新的裁切圖
    ho_imagePart.Dispose();
    HOperatorSet.CropDomain(ho_imageReduced, out ho_imagePart);
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.ClearWindow(HDevWindowStack.GetActive());
    }
    if (HDevWindowStack.IsOpen())
    {
      HOperatorSet.DispObj(ho_imagePart, HDevWindowStack.GetActive());
    }
    HOperatorSet.GetImageSize(ho_imagePart, out hv_width, out hv_height);
    //* //saveName:=saveDirectory+'\\'+fileName+'\\'+indexClass+'_'+indexImage+'.jpg'
    //* //write_image (imagePart,'jpeg',0,saveDirectory+'\\'+fileName+'\\'+indexClass+'_'+indexImage+'.jpg')

    //*stop ()
    //*area_center (RegionClosing1, Area, Row, Column)

    //*dev_display (imageRaw)
    //*gen_circle (Circle, Row, Column, 100.5)
    //* gen_circle_contour_xld (ContCircle, Row, Column, 100, 0, 6.28318, 'positive', 1)


    //*找球
    //*rgb1_to_gray (imageRaw, imageGray)
    //*二質化
    //*threshold (imageGray,imageThread,grayMin,grayMax)
    //*開閉
    //*fill_up (imageThread, RegionFillUp)
    //*de
    //*closing (RegionFillUp, RegionFillUp, RegionClosing)

    ho_imageRaw.Dispose();
    ho_edgeAmplitude1.Dispose();
    ho_imageEmphasize.Dispose();
    ho_imageMean.Dispose();
    ho_region.Dispose();
    ho_regionClosing1.Dispose();
    ho_connectedRegions.Dispose();
    ho_selectedRegions.Dispose();
    ho_rectangle1.Dispose();
    ho_imageReduced.Dispose();
    ho_imagePart.Dispose();

  }


}
#if !NO_EXPORT_APP_MAIN
public class HDevelopExportApp
{
  static void Main(string[] args)
  {
    new HDevelopExport();
  }
}
#endif

